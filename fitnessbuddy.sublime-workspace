{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"marg",
				"margin-right"
			],
			[
				"pad",
				"padding-right"
			],
			[
				"po",
				"pos-f	position: fixed;"
			],
			[
				"ov",
				"ov	overflow: ${1:hidden};"
			],
			[
				"fun",
				"function"
			],
			[
				"myE",
				"myEventRefs"
			],
			[
				"eve",
				"eventlist"
			],
			[
				"event",
				"eventformat"
			],
			[
				"my",
				"myEvents"
			],
			[
				"date_def",
				"date_default_timezone_set"
			],
			[
				"res",
				"results"
			],
			[
				"for",
				"for	for (…) {…}"
			],
			[
				"lo",
				"log"
			],
			[
				"inse",
				"insert_member"
			],
			[
				"fo",
				"format"
			],
			[
				"$sa",
				"$save"
			],
			[
				"ev",
				"event"
			],
			[
				"a",
				"auth"
			],
			[
				"$fa",
				"$facebook"
			],
			[
				"$face",
				"$facebookProvider"
			],
			[
				"$roo",
				"$rootScope	AngularJS"
			],
			[
				"is_n",
				"is_null"
			],
			[
				"re",
				"request"
			],
			[
				"ng-cl",
				"ng-click	AngularJS"
			],
			[
				"s",
				"session"
			],
			[
				"acce",
				"access_token"
			],
			[
				"Fa",
				"FacebookRequest"
			],
			[
				"p",
				"php	<?php … ?>"
			],
			[
				"on",
				"onclick	Attr"
			],
			[
				"db",
				"dbLoaded"
			],
			[
				"ez",
				"ezfbProvider"
			],
			[
				"$fi",
				"$firebaseObject"
			],
			[
				"cons",
				"console"
			],
			[
				"$lo",
				"$location	AngularJS"
			],
			[
				"$loca",
				"$location	AngularJS(DI)"
			],
			[
				"com",
				"compare"
			],
			[
				"auth",
				"author"
			],
			[
				"getM",
				"getMyEvents"
			],
			[
				"ng-re",
				"ng-repeat	AngularJS"
			],
			[
				"fa",
				"facebook"
			],
			[
				"tim",
				"time"
			],
			[
				"con",
				"console"
			],
			[
				"eventl",
				"eventlocation"
			],
			[
				"pl",
				"place"
			],
			[
				"ma",
				"marker"
			],
			[
				"place",
				"places"
			],
			[
				"ti",
				"time"
			],
			[
				"n",
				"name"
			],
			[
				"pla",
				"places"
			],
			[
				"new",
				"newEvent"
			],
			[
				"ne",
				"newValue"
			],
			[
				"$sc",
				"$scope	AngularJS"
			],
			[
				"F",
				"FIREBASE_URL"
			],
			[
				"md",
				"modal"
			]
		]
	},
	"buffers":
	[
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 11059,
				"line_ending": "Unix"
			}
		},
		{
			"file": "css/style.css",
			"settings":
			{
				"buffer_size": 383,
				"line_ending": "Unix"
			}
		},
		{
			"file": "css/angular-atomic-notify.css",
			"settings":
			{
				"buffer_size": 1508,
				"line_ending": "Unix"
			}
		},
		{
			"file": "js/script.js",
			"settings":
			{
				"buffer_size": 11854,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "ins",
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"clinter",
				"SublimeLinter: Create Linter Plugin"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"packi",
				"Package Control: Remove Repository"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"jsh",
				"JSHint"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git com",
				"Git: Quick Commit"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git co",
				"Git: Quick Commit"
			],
			[
				"git:add",
				"Git: Add..."
			],
			[
				"git:st",
				"Git: Status"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"print('\\n'*100)",
			"clear",
			"clearscr",
			"clr",
			"cls",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Volumes/Patrick/Sites/fitnessbuddy"
	],
	"file_history":
	[
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/User/AngularJS-sublime-package.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/User/AngularJS-completions.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/AngularJS/AngularJS-completions.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/AngularJS/AngularJS-sublime-package.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/AngularJS/AngularJS-js-completions.sublime-settings",
		"/Users/Patrick/.bash_profile",
		"/Users/Patrick/.profile",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Volumes/Patrick/Sites/fitnessbuddy/css/angular-atomic-notify.css",
		"/Volumes/Patrick/Sites/fitnessbuddy/css/angular-atomic-notify.min.css",
		"/Volumes/Patrick/Sites/fitnessbuddy/css/style.css",
		"/Volumes/Patrick/Sites/fitnessbuddy/index.html",
		"/Volumes/Patrick/Sites/fitnessbuddy/js/script.js",
		"/Volumes/Patrick/Sites/fitnessbuddy/createFBEvent.php",
		"/Users/Patrick/Desktop/whoishere.js",
		"/Users/Patrick/Desktop/members.php",
		"/Users/Patrick/Desktop/member_manager.py",
		"/Volumes/Patrick/Sites/fitnessbuddy/composer.json",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/JSHint Gutter/.jshintrc",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/Emmet/Emmet.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/User/AngularJS.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/HTMLBeautify/HTMLBeautify.sublime-settings",
		"/Users/Patrick/toilets.html",
		"/Users/Patrick/Desktop/graph.js",
		"/Users/Patrick/Desktop/toilets.html",
		"/Users/Patrick/Desktop/toiletstate.php",
		"/Users/Patrick/Desktop/toiletstatus.js",
		"/Volumes/Patrick/Sites/fitnessbuddy/js/angular-social-links.js",
		"/Volumes/Patrick/Sites/fitnessbuddy/js/angular-socialshare.min.js",
		"/Users/Patrick/bash/.functions.bash",
		"/etc/auto_master",
		"/etc/auto_resources",
		"/etc/autofs.conf",
		"/etc/auto_home",
		"/Users/Patrick/Desktop/fitnessbuddy/js/script.js",
		"/Users/Patrick/Desktop/fitnessbuddy/index.html",
		"/Users/Patrick/bashRepo/.aliases.bash",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/JSHint Gutter/JSHint.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/JSHint Gutter/Default (OSX).sublime-keymap",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/JsFormat/Default (OSX).sublime-keymap",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/JsFormat/JsFormat.sublime-settings",
		"/Users/Patrick/Library/Application Support/Sublime Text 3/Packages/User/JsFormat.sublime-settings",
		"/Volumes/Patrick/Sites/fitnessbuddy/script.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"checkMembers",
			"no-gutters",
			"index",
			"eventl",
			"count",
			"plac",
			"ownedEvents",
			"id",
			"filteredEvents",
			"myModal",
			"ordered",
			"orderedOwnedEvents",
			"modalInstance",
			"\".*\""
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"myEventRefs",
			"'.*'"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11059,
						"regions":
						{
						},
						"selection":
						[
							[
								10989,
								10989
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/AngularJS/AngularJS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2073.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "css/style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 383,
						"regions":
						{
						},
						"selection":
						[
							[
								94,
								94
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/CSS/CSS.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "css/angular-atomic-notify.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1508,
						"regions":
						{
						},
						"selection":
						[
							[
								109,
								109
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "js/script.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11854,
						"regions":
						{
						},
						"selection":
						[
							[
								2273,
								2273
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 610.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 116.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 100.0
	},
	"pinned_build_system": "",
	"project": "fitnessbuddy.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 105.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
